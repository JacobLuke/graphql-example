

# Type Defining unique ID of all objectss
scalar ID

type Unit {
    id: ID!
    year: String
    make: String
    model: String
    trim: String
    activeWorkOrder: WorkOrder
}

enum WorkOrderStatus {
    Inactive
    AwaitingAllocation
    EnteredIntoAuction
    SoldAwaitingInvoicing
}

interface Site {
  id: ID!
}

type PrivateSite implements Site {
    id: ID!
    displayName: String!
}

type OpenSite implements Site {
    id: ID!
}

type Dealership {
    id: ID!
    name: String!
}

union Owner = PrivateSite | Dealership

type WorkOrder {
    id: ID!
    unit: Unit!
    status: WorkOrderStatus
    owner: Owner!
    imageURLs: [String!]!
    activeListing: Listing
}

enum ListingStatus {
    Allocated
    Live
    NoSale
    Sold
    Cancelled
}

type Listing {
    id: ID!
    workOrder: WorkOrder!
    site: Site!
    status: ListingStatus!
    scheduledStart: String
    scheduledEnd: String
}

type WorkOrderQuery {
    id(id: ID!): WorkOrder!
    search(showInactive: Boolean): [WorkOrder!]!
}

type ListingQuery {
    id(id: ID!): Listing!
    search(statuses: [ListingStatus!]): [Listing!]!
}

type Query {
    workOrder: WorkOrderQuery
    listing: ListingQuery
}

schema {
    query: Query
}